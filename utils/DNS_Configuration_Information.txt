Useful Blog:
     https://www.linuxbabe.com/ubuntu/set-up-local-dns-resolver-ubuntu-20-04-bind9


Install Ubuntu Server 20.04 with static IP address

Install BIND using this command:
     sudo apt update
     sudo apt install bind9 bind9utils bind9-doc bind9-host

Other miscellaneous useful tools to install:
     sudo apt install net-tools

Good idea to upgrade packages:
     sudo apt upgrade

NOTE: By design, the local DNS server is NOT updated to point to itself for DNS when done.
      This is just to ensure it can still resolve names should a repair be required.

================================= NEXT FILE ============================================


//
// File: /etc/bind/named.conf
//

// This is the primary configuration file for the BIND DNS server named.
//
// Please read /usr/share/doc/bind9/README.Debian.gz for information on the 
// structure of BIND configuration files in Debian, *BEFORE* you customize 
// this configuration file.
//
// If you are just adding zones, please do that in /etc/bind/named.conf.local

include "/etc/bind/named.conf.options";
include "/etc/bind/named.conf.local";
include "/etc/bind/named.conf.default-zones";

logging {
    channel default_file {
        file "/var/log/named/default.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel general_file {
        file "/var/log/named/general.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel database_file {
        file "/var/log/named/database.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel security_file {
        file "/var/log/named/security.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel config_file {
        file "/var/log/named/config.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel resolver_file {
        file "/var/log/named/resolver.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel xfer-in_file {
        file "/var/log/named/xfer-in.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel xfer-out_file {
        file "/var/log/named/xfer-out.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel notify_file {
        file "/var/log/named/notify.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel client_file {
        file "/var/log/named/client.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel unmatched_file {
        file "/var/log/named/unmatched.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel queries_file {
        file "/var/log/named/queries.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel network_file {
        file "/var/log/named/network.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel update_file {
        file "/var/log/named/update.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel dispatch_file {
        file "/var/log/named/dispatch.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel dnssec_file {
        file "/var/log/named/dnssec.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };
    channel lame-servers_file {
        file "/var/log/named/lame-servers.log" versions 3 size 5m;
        severity dynamic;
        print-time yes;
    };

    category default { default_file; };
    category general { general_file; };
    category database { database_file; };
    category security { security_file; };
    category config { config_file; };
    category resolver { resolver_file; };
    category xfer-in { xfer-in_file; };
    category xfer-out { xfer-out_file; };
    category notify { notify_file; };
    category client { client_file; };
    category unmatched { unmatched_file; };
    category queries { queries_file; };
    category network { network_file; };
    category update { update_file; };
    category dispatch { dispatch_file; };
    category dnssec { dnssec_file; };
    category lame-servers { lame-servers_file; };
};

================================= NEXT FILE ============================================


//
// File: /etc/bind/named.conf.options
//

// caching only DNS server config
//
acl lab-networks {
  10.203.0.0/16;
  fd00::/48;
  10.0.0.0/8;			// Should include Ansible Control Station
  localhost;
  localnets;
};

options {
  directory "/var/cache/bind";
  recursion yes;
  allow-query { any; };
  allow-query-cache { any; };
  allow-recursion { lab-networks; };
  forwarders { 
    10.200.64.254;         // Update to 4.2.2.2
    10.100.64.254;         // Update to 8.8.8.8
  }; 
  dnssec-validation no;
  auth-nxdomain no; # conform to RFC1035
  listen-on { localhost; any; };
  listen-on-v6 { localhost; any; };
  allow-transfer { none; };
};


================================= NEXT FILE ============================================


//
// File: /etc/bind/named.conf.local
//

//
// Do any local configuration here
//

// Consider adding the 1918 zones here, if they are not used in your
// organization
//include "/etc/bind/zones.rfc1918";

zone "sddc.lab" {
  type master;
  allow-update {10.0.0.0/8;};           // Needs to be the IP address of the Ansible control station
  allow-transfer {10.0.0.0/8;};         // Should be the address of the Ansible control station -- Used just for testing
  file "/var/lib/bind/db.sddc.lab";
};

zone "203.10.in-addr.arpa" {
  type master;
  allow-update {10.0.0.0/8;};           // Needs to be the IP address of the Ansible control station
  allow-transfer {10.0.0.0/8;};         // Should be the address of the Ansible control station -- Used just for testing
  file "/var/lib/bind/db.10.203";
};

zone "0.0.d.f.ipv6.arpa" {
  type master;
  allow-update {10.0.0.0/8;};           // Needs to be the IP address of the Ansible control station
  allow-transfer {10.0.0.0/8;};         // Should be the address of the Ansible control station -- Used just for testing
  file "/var/lib/bind/db.fd00";
  notify yes;
};


================================= NEXT FILE ============================================


;;
;; File: /var/lib/bind/db.sddc.lab
;;

$TTL 604800
@ IN SOA dns.sddc.lab. admin.sddc.lab. (
          10   ; Serial
      604800   ; Refresh
       86400   ; Retry
     2419200   ; Expire
      604800 ) ; Negative Cache TTL
;

; Name servers
sddc.lab.    IN   NS   dns.sddc.lab.

; Define Origin
$ORIGIN  sddc.lab.

; A records for name servers
dns            IN   A    10.203.0.5

; Other A records






================================= NEXT FILE ============================================



;;
;; File: /var/lib/bind/db.10.203
;;

$TTL 604800
@ IN SOA dns.sddc.lab. admin.sddc.lab. (
          10   ; Serial
      604800   ; Refresh
       86400   ; Retry
     2419200   ; Expire
      604800 ) ; Negative Cache TTL
;

; Name servers
203.10.in-addr.arpa.    IN   NS   dns.sddc.lab.

; A records for name servers
dns            IN   A    10.203.0.5

;Define origin
$ORIGIN 203.10.in-addr.arpa.

; PTR records
5.0    IN   PTR  dns.sddc.lab.


================================= NEXT FILE ============================================


;;
;; File: /var/lib/bind/db.fd00
;;

$ORIGIN .
$TTL 604800     ; 1 week
0.0.d.f.ipv6.arpa      IN SOA  dns.sddc.lab. admin.sddc.lab. (
                                361        ; serial
                                604800     ; refresh (1 week)
                                86400      ; retry (1 day)
                                2419200    ; expire (4 weeks)
                                604800     ; minimum (1 week)
                                )
0.0.d.f.ipv6.arpa.     IN NS    dns.sddc.lab.
$ORIGIN 0.0.d.f.ipv6.arpa.
$TTL 604800     ; 1 week
dns.sddc.lab.           A       10.203.0.5


================================= NEXT FILE ============================================


Useful Commands:
================

     Start BIND:
          sudo systemctl start named

     Restart BIND:
          sudo systemctl restart named

     BIND Status (Useful to show errors in configuraton)
          sudo systemctl status named

     Enable auto-start at enable BIND:
          sudo systemctl enable named

     Verify all listeners are operational:
          sudo netstat -lnptu | grep named

     Check status of BIND server:
          sudo rndc status

     Verify zone files via:
          named-checkconf /etc/bind/named.conf
          echo $?

     Verify BIND is working (from DNS server)
          From BIND Server:  dig @127.0.0.1 dns.sddc.lab
          From other systems: dig @<IP-OF-BIND-SeRVER> dns.sddc.lab





Expected Output From Working System
====================================
adminuser@lab-dns:/etc/bind$ 
adminuser@lab-dns:/etc/bind$ 
adminuser@lab-dns:/etc/bind$ sudo netstat -lnptu | grep named
tcp        0      0 10.203.0.5:53           0.0.0.0:*               LISTEN      7994/named          
tcp        0      0 127.0.0.1:53            0.0.0.0:*               LISTEN      7994/named          
tcp        0      0 127.0.0.1:953           0.0.0.0:*               LISTEN      7994/named          
tcp6       0      0 fe80::20c:29ff:fe17::53 :::*                    LISTEN      7994/named          
tcp6       0      0 ::1:53                  :::*                    LISTEN      7994/named          
tcp6       0      0 ::1:953                 :::*                    LISTEN      7994/named          
udp        0      0 10.203.0.5:53           0.0.0.0:*                           7994/named          
udp        0      0 127.0.0.1:53            0.0.0.0:*                           7994/named          
udp6       0      0 ::1:53                  :::*                                7994/named          
udp6       0      0 fe80::20c:29ff:fe17::53 :::*                                7994/named          
adminuser@lab-dns:/etc/bind$ 
adminuser@lab-dns:/etc/bind$ 
adminuser@lab-dns:/etc/bind$ 
adminuser@lab-dns:/etc/bind$ sudo systemctl restart named
adminuser@lab-dns:/etc/bind$ sudo systemctl status named 
● named.service - BIND Domain Name Server
     Loaded: loaded (/lib/systemd/system/named.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2020-06-21 23:30:19 UTC; 1s ago
       Docs: man:named(8)
   Main PID: 7994 (named)
      Tasks: 5 (limit: 1075)
     Memory: 11.6M
     CGroup: /system.slice/named.service
             └─7994 /usr/sbin/named -f -u bind

Jun 21 23:30:19 lab-dns named[7994]: command channel listening on ::1#953
Jun 21 23:30:19 lab-dns named[7994]: managed-keys-zone: loaded serial 3
Jun 21 23:30:19 lab-dns named[7994]: zone 0.in-addr.arpa/IN: loaded serial 1
Jun 21 23:30:19 lab-dns named[7994]: zone 203.10.in-addr.arpa/IN: loaded serial 10
Jun 21 23:30:19 lab-dns named[7994]: zone 127.in-addr.arpa/IN: loaded serial 1
Jun 21 23:30:19 lab-dns named[7994]: zone sddc.lab/IN: loaded serial 10
Jun 21 23:30:19 lab-dns named[7994]: zone 255.in-addr.arpa/IN: loaded serial 1
Jun 21 23:30:19 lab-dns named[7994]: zone localhost/IN: loaded serial 2
Jun 21 23:30:19 lab-dns named[7994]: all zones loaded
Jun 21 23:30:19 lab-dns named[7994]: running
